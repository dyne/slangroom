# SPDX-FileCopyrightText: 2024 Dyne.org foundation
#
# SPDX-License-Identifier: AGPL-3.0-or-later

name: 🧪 Lint and test

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  reuse:
    name: 🚨 reuse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: fsfe/reuse-action@v5

  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        node: [ lts/*, current ]
    steps:
      - name: 🛠️ Prepare pnpm workspace
        uses: dyne/pnpm@main
        with:
          node-version: ${{ matrix.node }}
      - uses: supercharge/redis-github-action@1.8.0
        with:
          redis-version: 6
      - name:  Linting
        continue-on-error: true
        run: pnpm lint
      - name: 🤖 Start pocketbase
        run: |
          ./pkg/pocketbase/test/pocketbase serve &
          while ! nc -z 0.0.0.0 8090; do echo "pocketbase not ready" && sleep 1; done
      - name: 🤖 Start microservices
        run: |
          ./pkg/oauth/test/start_microservices.sh setup
      - name: 🤖 Start ganache
        run: |
          pnpm exec ganache \
            --server.host 0.0.0.0 \
            --server.port 9485 \
            --chain.chainId 1717658228 \
            --wallet.seed "spoon ostrich survey tumble tube used person also wasp rack cabbage liberty" &
        working-directory: ./pkg/ethereum
      - name: 🧪 Run the tests
        run: pnpm coverage
      - name: 🧪 Test grammar package
        run: pnpm test:grammar
      - name: 📨 Setup playwright
        run: |
          pnpm exec playwright install
          pnpm exec playwright install-deps
          pnpm build
          pnpm exec playwright test
        working-directory: ./pkg/browser
      - name: 🪦 kill local microservices
        run: |
          ./pkg/oauth/test/start_microservices.sh cleanup

  build_docs:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 🛠️ Prepare pnpm workspace
        uses: dyne/pnpm@main
      - name: 📖 Setup Pages
        uses: actions/configure-pages@v5
      - name: 🏗️ update sentences tabled and build the docs
        run: pnpm build && pnpm run docs
      - name: ⏫ Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  deploy_docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build_docs
    runs-on: ubuntu-latest
    name: Deploy documentation
    steps:
      - name: 📡 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/main'
    steps:
    - name: 🛠️ Prepare pnpm workspace
      uses: dyne/pnpm@main
    - name: 🏗️ Build all
      run: pnpm build
    - name: 🌍 Build @slangroom/browser
      run: pnpm build
      working-directory: ./pkg/browser
    - name: 📦 Releases
      run: |
        git config --global user.email "dev@dyne.org" && git config --global user.name "Dev Dyne.org"
        echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" > .npmrc
        pnpm whoami
        pnpm publish:ci
      env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

