// SPDX-FileCopyrightText: 2024 Dyne.org foundation
//
// SPDX-License-Identifier: AGPL-3.0-or-later

import { ExternalTokenizer } from '@lezer/lr';
import {
	eof,
{{ tokens }}
} from './syntax.grammar.terms';

export const Eoftoken = new ExternalTokenizer(
	(input) => {
		if (input.next < 0) {
			input.acceptToken(eof);
		}
	},
	{ contextual: true, fallback: true },
);

const keywordMap = {
{{ keywordMap }}
};

export function keywords(name) {
	if (name == 'I') {
		return keywordMap[name];
	}

	let found = keywordMap[name.toLowerCase()];
	return found == null ? -1 : found;
}
